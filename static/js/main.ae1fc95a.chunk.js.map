{"version":3,"sources":["components/MovieCard.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","props","className","Title","Plot","Released","imdbRating","App","state","movies","fetch","then","response","json","data","console","log","setState","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAaeA,MAXf,SAAgBC,GACZ,OACI,sBAAKC,UAAU,QAAf,UACI,yCAAYD,EAAME,SAClB,+CAAkBF,EAAMG,QACxB,gDAAmBH,EAAMI,YACzB,0CAAaJ,EAAMK,kBCiChBC,E,kDAnCb,WAAYN,GAAQ,IAAD,8BACjB,gBACKO,MAAM,CACTC,OAAQ,IAHO,E,qDAOnB,WAAqB,IAAD,OAElBC,MADgB,kEAEbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAER,OAAQK,IACxBC,QAAQC,IAAI,EAAKR,MAAMC,OAAON,Y,oBAIpC,WACE,OACE,sBAAKD,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,oDAEF,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,UAAf,SACE,4D,GA7BQgB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae1fc95a.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Movies(props) {\n    return (\n        <div className=\"movie\">\n            <h3>Title: {props.Title}</h3>\n            <h4>Description: {props.Plot}</h4>\n            <h4>Release Date: {props.Released}</h4>\n            <h4>Rating: {props.imdbRating}</h4>\n        </div>\n    )\n}\n\nexport default Movies","import './App.css';\nimport React, {Component} from 'react'\nimport Movies from './components/MovieCard.js';\n\n\nclass App extends Component {\n  constructor(props) {\n    super()\n    this.state={\n      movies: [],\n    }\n  }\n\n  componentDidMount() {\n    let moviesUrl = \"http://www.omdbapi.com/?apikey=1e0d0e1d&t=Spongebob&type=movie\"\n    fetch(moviesUrl)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ movies: data })\n        console.log(this.state.movies.Title)\n      })\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <p>Header thing here</p>\n        </div>\n        <div className=\"result\">\n          <Movies />\n        </div>\n        <div className=\"history\">\n          <p>History stuff here</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}